::: {.content-visible unless-format="revealjs"}
# Dictionaries

:::

::: {.content-visible when-format="revealjs"}
##  {data-name="<b>3.6 DICTIONARIES</b>"}
:::

* Mapping types: have **keys** which map to **values**
* A pair of key and value is called an **entry**
* Dictionaries are NOT ORDERED! But they are subscriptable (with the keys - which have to be immutable objects)

```{python}
phones = {'Sarah':'476-3321', 'Nathan':'351-7743'} 
users = {'Name':'Molly', 'Age':18} 	 
emp = {} # an empty dictionary
```

---
You can add a new entry by just specifying it:

```{python}
phones['Bob'] = '123-4567'
print(phones)
```

Or also change values using the keys:

```{python}
phones['Sarah'] = '999-9999'
print(phones)
```

To delete, use:
```{python}
del phones['Nathan']
print(phones)
```
::: {.content-visible when-format="revealjs"}

## Dictionary methods {.smaller .scrollable}

| Operation    | Description                                                                                                 |
|--------------|-------------------------------------------------------------------------------------------------------------|
| clear()      | Removes all the elements from the dictionary                                                                |
| copy()       | Returns a copy of the dictionary                                                                            |
| fromkeys()   | Returns a dictionary with the specified keys and value                                                      |
| get()        | Returns the value of the specified key                                                                      |
| items()      | Returns a list containing a tuple for each key value pair                                                   |
| keys()       | Returns a list containing the dictionary's keys                                                             |
| pop()        | Removes the element with the specified key                                                                  |
| popitem()    | Removes the last inserted key-value pair                                                                    |
| setdefault() | Returns the value of the specified key. If the key does not exist: insert the key, with the specified value |
| update()     | Updates the dictionary with the specified key-value pairs                                                   |
| values()     | Returns a list of all the values in the dictionary                                                          |

:::